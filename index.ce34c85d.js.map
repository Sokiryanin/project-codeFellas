{"mappings":"oeAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,SAeOE,eAAeC,IACpB,OAAOF,EAAAG,QAAMC,IAbE,uDAaYC,MAAKC,GACvBA,EAASC,M,CAKbN,eAAeO,EAAcC,GAClC,OAAOT,EAAAG,QAAMC,IAAI,+DAA2BK,KAAgBJ,MAAKC,IAC/DI,QAAQC,IAAIL,EAASC,MACdD,EAASC,O,CAIpBC,EAAc,mC,iBC1Bd,MAAMI,G,cAAeC,KAAKC,kBAEnB,SAASC,EAAgBC,GAC9BR,EAAcQ,GACXX,MAAKC,IAMV,IAAwBW,IAIxB,SAAyBC,GACvB,MACMC,EAAQ,+BADOC,EAAaF,EAAM,GAAGG,kBAGrCC,EAAWJ,EACdK,KAAIC,GACI,uCAAuCA,EAAKC,+IAGVD,EAAKE,+KAKVF,EAAKL,uDACJK,EAAKG,8BAG3CC,KAAK,IAER,MADe,qCAAqCT,+BAAmCG,c,CA5BpEO,CAAgBvB,GAMnCM,EAAakB,UAAYb,CANoB,IAE1Cc,MAAMrB,QAAQC,I,CA8BZ,SAASS,EAAaY,GAC3B,MAAMvB,EAAeuB,EAAOC,MAAM,KAC5BC,EAAezB,EAAa0B,OAClC,IAAIC,EAAsB,GAC1B,GAAIF,EAAe,EAAG,CACpB,IAAK,IAAIG,EAAI,EAAGA,GAAKH,EAAe,EAAGG,GAAK,EAC1CD,GAAuB,IAAM3B,EAAa4B,GAE5CD,GAEE,iCAAgC3B,EAAayB,EAAe,U,MAE9DE,EAAsB,gCAAgC3B,EAAa,WAErE,OAAO2B,C,CC9CT,SAASE,EAAeC,GACtB,MAAMlB,UAAEA,EAASmB,MAAEA,GAAUD,EAuB7B,MADe,mCApBD,yCAAyClB,uCACtCmB,EACdjB,KAAIC,GACI,yCAAyCA,EAAKC,kIAGlBD,EAAKE,oBAAoBF,EAAKL,4JAKlCK,EAAKL,kDACLK,EAAKG,8CAKrCC,KAAK,WAEc,uDAAuDP,6B,CAMxE,SAASoB,IACdvC,IACGG,MAAKC,IACJ,MAAMoC,EAAS,0GACXtB,EACA,6DACuCd,EACxCiB,IAAIe,GACJV,KAAK,iBAxCd,IAAqBX,IAyCHyB,EAxChBC,EAAA9B,KAAKC,kBAAkBgB,UAAYb,CAwCZ,IAEpBc,OAAMa,IACLlC,QAAQC,IAAI,yCAA0CiC,EAAM,G,CAdlEH,IAkBAE,EAAA9B,KAAKC,kBAAkB+B,iBAAiB,SAASC,IACjB,WAA1BA,EAAMC,OAAOC,UACfjC,EAAgB+B,EAAMC,OAAOE,QAAQC,GAAG,ICjD5C,MAAMC,G,cAAOtC,KAAKuC,gBHGXnD,iBACL,OAAOD,EAAAG,QAAMC,IAPO,2DAOYC,MAAKC,GAC5BA,EAASC,M,EGFlB,GAAmBF,MAAKgD,IACtBF,EAAKG,mBAAmB,YAA0BD,EAMjD9B,KAAI,EAACF,UAAEA,KACC,yHAGIA,mDAIZO,KAAK,IAdkD,IAmB5DuB,EAAKN,iBAAiB,SAEtB,SAAyBU,GAEvB,GADAA,EAAEC,iBACwB,SAAtBD,EAAER,OAAOC,SACX,OAGkBS,SAASC,cAAc,YAC/BC,UAAUC,OAAO,WAE7B,MAAMC,EAAYN,EAAER,OACpBc,EAAUF,UAAUG,IAAI,WAEM,mBAA1BD,EAAUE,YACZtB,IAGA1B,EAAgBwC,EAAER,OAAOgB,Y","sources":["src/index.js","src/js/fetch.js","src/js/selectedCategory.js","src/js/bestBooks.js","src/js/allCategories.js"],"sourcesContent":["import './js/burger-menu';\nimport './js/fetch';\nimport './js/allCategories';\nimport './js/support';\nimport './js/bestBooks';\nimport './js/selectedCategory';\n","import axios from 'axios';\n\nconst categoriesAll = 'https://books-backend.p.goit.global/books/category-list';\nconst topBooks = 'https://books-backend.p.goit.global/books/top-books';\nconst getCategory = 'https://books-backend.p.goit.global/books/category';\nconst bookInfo = 'https://books-backend.p.goit.global/books/';\n\n// return all categories\nexport async function getAllCategories() {\n  return axios.get(categoriesAll).then(response => {\n    return response.data;\n  });\n}\n\n// return top books\nexport async function getTopBooks() {\n  return axios.get(topBooks).then(response => {\n    return response.data;\n  });\n}\n\n// return choose category\nexport async function getByCategory(categoryName) {\n  return axios.get(`${getCategory}?category=${categoryName}`).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n}\n\ngetByCategory('Advice How-To and Miscellaneous');\n\n// return bool by id\nexport async function getBookById(id) {\n  return axios.get(`${bookInfo}${id}`).then(response => {\n    return response.data;\n  });\n}\n","import { getByCategory } from './fetch';\nimport { refs } from './refs';\n\nconst containerRef = refs.selectedCattegory;\n\nexport function onClickCategory(category) {\n  getByCategory(category)\n    .then(response => {\n      renderCategory(getMarkCategory(response));\n    })\n    .catch(console.log);\n}\n\nfunction renderCategory(mark) {\n  containerRef.innerHTML = mark;\n}\n\nfunction getMarkCategory(array) {\n  const categoryName = markLastWord(array[0].list_name);\n  const title = `<h2 class=\"category__title\">${categoryName}</h2>`;\n\n  const elements = array\n    .map(book => {\n      return `<li class=\"category__item\" data-id=\"${book._id}\">\n      <div class=\"category__item-wrap\">\n        <div class=\"category__img-container\">\n        <img class=\"category__item-img\" src=\"${book.book_image} \"/>\n        <p class=\"category__pop-up-text\">\n                    quick view \n                  </p>\n        </div>\n        <p class=\"category__item-title\">${book.title}</p>\n        <p class=\"category__item-author\">${book.author}</p>\n        </li>`;\n    })\n    .join('');\n  const result = `<div class=\"select-category-cont\">${title}<ul class=\"category__list\">${elements}</ul></div>`;\n  return result;\n}\n\nexport function markLastWord(string) {\n  const categoryName = string.split(' ');\n  const quantityWord = categoryName.length;\n  let categoryNameAddSpan = '';\n  if (quantityWord > 1) {\n    for (let i = 0; i <= quantityWord - 2; i += 1) {\n      categoryNameAddSpan += ' ' + categoryName[i];\n    }\n    categoryNameAddSpan +=\n      ' ' +\n      `<span class=title__last-word>${categoryName[quantityWord - 1]}<span>`;\n  } else {\n    categoryNameAddSpan = `<span class=title__last-word>${categoryName[0]}<span>`;\n  }\n  return categoryNameAddSpan;\n}\n","import { getTopBooks } from './fetch';\nimport { refs } from './refs';\nimport { markLastWord, onClickCategory } from './selectedCategory';\n\nfunction renderBooks(mark) {\n  refs.selectedCattegory.innerHTML = mark;\n}\n\nfunction renderBookCard(book) {\n  const { list_name, books } = book;\n\n  const title = `<h3 class=\"best-category__item-title\">${list_name}</h3>`;\n  const elements = books\n    .map(book => {\n      return ` <li class=\"best-book__item\" data-id=\"${book._id}\">\n      <div class=\"best-book__wrap\">\n    <div class=\"best-book__img-container\">\n      <img class=\"best-book__img\" src=\"${book.book_image}\" alt=\"${book.title}\"/>\n      <p class=\"book__pop-up-text\">\n                quick view \n              </p>\n              </div>\n      <h3 class=\"best-book__title\">${book.title}</h3>\n      <p class=\"best-book__author\">${book.author}</p>\n      </div>\n    </li>\n    `;\n    })\n    .join('');\n\n  const seeMoreButton = `<button class=\"seemore__btn\" type=\"button\" data-id=\"${list_name}\">See more</button>`;\n  const result = `<li class=\"best-category__item\">${title}<ul class=\"best-book__list\">${elements}</ul>${seeMoreButton}</li>`;\n  return result;\n}\nrenderCategory();\n\nexport function renderCategory() {\n  getTopBooks()\n    .then(response => {\n      const markup = `<div class=\" best-category__container\"><h2 class=\"best-category__title title-category__list\">\n        ${markLastWord(\n          'Best Sellers Books'\n        )}</h2><ul class=\"best-category__list\">${response\n        .map(renderBookCard)\n        .join('')}</ul></div>`;\n      renderBooks(markup);\n    })\n    .catch(error => {\n      console.log('Помилка при отриманні даних з сервера:', error);\n    });\n}\n\nrefs.selectedCattegory.addEventListener('click', event => {\n  if (event.target.nodeName === 'BUTTON') {\n    onClickCategory(event.target.dataset.id);\n  }\n});\n","import { renderCategory } from './bestBooks';\nimport { getAllCategories } from './fetch';\nimport { refs } from './refs';\nimport { onClickCategory } from './selectedCategory';\n\nconst list = refs.categoriesList;\n\nfunction renderCategoryList() {\n  getAllCategories().then(resp => {\n    list.insertAdjacentHTML('beforeend', createMarkup(resp));\n  });\n}\n\nfunction createMarkup(list) {\n  return list\n    .map(({ list_name }) => {\n      return `\n    <li class=\"categories__item\">\n         <a href=\"\" class=\"categories__link categories__link-js\"\n        ><span>${list_name}</span></span></spa></a>\n        </li>\n    `;\n    })\n    .join('');\n}\n\nrenderCategoryList();\n\nlist.addEventListener('click', currentCategory);\n\nfunction currentCategory(e) {\n  e.preventDefault();\n  if (e.target.nodeName !== 'SPAN') {\n    return;\n  }\n\n  const removeClass = document.querySelector('.current');\n  removeClass.classList.remove('current');\n\n  const currentEl = e.target;\n  currentEl.classList.add('current');\n\n  if (currentEl.textContent === 'All categories') {\n    renderCategory();\n    // console.log('BestBooks');\n  } else {\n    onClickCategory(e.target.textContent);\n    // console.log('Another category');\n  }\n}\n"],"names":["parcelRequire","$2shzp","async","$924b66e829bc1184$export$3a1253a897925caa","default","get","then","response","data","$924b66e829bc1184$export$3284c578b0ee51b1","categoryName","console","log","$17abf32bdfed18e1$var$containerRef","refs","selectedCattegory","$17abf32bdfed18e1$export$68a4a2caef8d9054","category","mark","array","title","$17abf32bdfed18e1$export$7a7789929b11dbd1","list_name","elements","map","book","_id","book_image","author","join","$17abf32bdfed18e1$var$getMarkCategory","innerHTML","catch","string","split","quantityWord","length","categoryNameAddSpan","i","$34993c7160fee615$var$renderBookCard","book1","books","$34993c7160fee615$export$e97b6e5d629f1acb","markup","$krGWQ","error","addEventListener","event","target","nodeName","dataset","id","$b82465fdd637a2b4$var$list","categoriesList","resp","insertAdjacentHTML","e","preventDefault","document","querySelector","classList","remove","currentEl","add","textContent"],"version":3,"file":"index.ce34c85d.js.map"}