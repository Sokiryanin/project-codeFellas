{"mappings":"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","sources":["src/js/fetch.js","src/js/selectedCategory.js","src/js/bestBooks.js","src/js/allCategories.js"],"sourcesContent":["import axios from 'axios';\n\nconst categoriesAll = 'https://books-backend.p.goit.global/books/category-list';\nconst topBooks = 'https://books-backend.p.goit.global/books/top-books';\nconst getCategory = 'https://books-backend.p.goit.global/books/category';\nconst bookInfo = 'https://books-backend.p.goit.global/books/';\n\n// return all categories\nexport async function getAllCategories() {\n  return axios.get(categoriesAll).then(response => {\n    return response.data;\n  });\n}\n\n// return top books\nexport async function getTopBooks() {\n  return axios.get(topBooks).then(response => {\n    return response.data;\n  });\n}\n\n// return choose category\nexport async function getByCategory(categoryName) {\n  return axios.get(`${getCategory}?category=${categoryName}`).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n}\n\ngetByCategory('Advice How-To and Miscellaneous');\n\n// return bool by id\nexport async function getBookById(id) {\n  return axios.get(`${bookInfo}${id}`).then(response => {\n    return response.data;\n  });\n}\n","import { getByCategory } from './fetch';\nimport { refs } from './refs';\n\nconst containerRef = refs.selectedCattegory;\n\nexport function onClickCategory(category) {\n  getByCategory(category)\n    .then(response => {\n      renderCategory(getMarkCategory(response));\n    })\n    .catch(console.log);\n}\n\nfunction renderCategory(mark) {\n  containerRef.innerHTML = mark;\n}\n\nfunction getMarkCategory(array) {\n  const categoryName = markLastWord(array[0].list_name);\n  const title = `<h2 class=\"category__title\">${categoryName}</h2>`;\n\n  const elements = array\n    .map(book => {\n      return `<li class=\"category__item\" data-id=\"${book._id}\">\n      <div class=\"category__item-wrap\">\n        <div class=\"category__img-container\">\n        <img class=\"category__item-img\" src=\"${book.book_image} \"/>\n        <p class=\"category__pop-up-text\">\n                    quick view \n                  </p>\n        </div>\n        <p class=\"category__item-title\">${book.title}</p>\n        <p class=\"category__item-author\">${book.author}</p>\n        </li>`;\n    })\n    .join('');\n  const result = `<div class=\"select-category-cont\">${title}<ul class=\"category__list\">${elements}</ul></div>`;\n  return result;\n}\n\nexport function markLastWord(string) {\n  const categoryName = string.split(' ');\n  const quantityWord = categoryName.length;\n  let categoryNameAddSpan = '';\n  if (quantityWord > 1) {\n    for (let i = 0; i <= quantityWord - 2; i += 1) {\n      categoryNameAddSpan += ' ' + categoryName[i];\n    }\n    categoryNameAddSpan +=\n      ' ' +\n      `<span class=title__last-word>${categoryName[quantityWord - 1]}<span>`;\n  } else {\n    categoryNameAddSpan = `<span class=title__last-word>${categoryName[0]}<span>`;\n  }\n  return categoryNameAddSpan;\n}\n","import { getTopBooks } from './fetch';\nimport { refs } from './refs';\nimport { markLastWord, onClickCategory } from './selectedCategory';\n\nfunction renderBooks(mark) {\n  refs.selectedCattegory.innerHTML = mark;\n}\n\nfunction renderBookCard(book) {\n  const { list_name, books } = book;\n\n  const title = `<h3 class=\"best-category__item-title\">${list_name}</h3>`;\n  const elements = books\n    .map(book => {\n      return ` <li class=\"best-book__item\" data-id=\"${book._id}\">\n      <div class=\"best-book__wrap\">\n    <div class=\"best-book__img-container\">\n      <img class=\"best-book__img\" src=\"${book.book_image}\" alt=\"${book.title}\"/>\n      <p class=\"book__pop-up-text\">\n                quick view \n              </p>\n              </div>\n      <h3 class=\"best-book__title\">${book.title}</h3>\n      <p class=\"best-book__author\">${book.author}</p>\n      </div>\n    </li>\n    `;\n    })\n    .join('');\n\n  const seeMoreButton = `<button class=\"seemore__btn\" type=\"button\" data-id=\"${list_name}\">See more</button>`;\n  const result = `<li class=\"best-category__item\">${title}<ul class=\"best-book__list\">${elements}</ul>${seeMoreButton}</li>`;\n  return result;\n}\nrenderCategory();\n\nexport function renderCategory() {\n  getTopBooks()\n    .then(response => {\n      const markup = `<div class=\" best-category__container\"><h2 class=\"best-category__title title-category__list\">\n        ${markLastWord(\n          'Best Sellers Books'\n        )}</h2><ul class=\"best-category__list\">${response\n        .map(renderBookCard)\n        .join('')}</ul></div>`;\n      renderBooks(markup);\n    })\n    .catch(error => {\n      console.log('Помилка при отриманні даних з сервера:', error);\n    });\n}\n\nrefs.selectedCattegory.addEventListener('click', event => {\n  if (event.target.nodeName === 'BUTTON') {\n    onClickCategory(event.target.dataset.id);\n  }\n});\n","import { renderCategory } from './bestBooks';\nimport { getAllCategories } from './fetch';\nimport { refs } from './refs';\nimport { onClickCategory } from './selectedCategory';\n\nconst list = refs.categoriesList;\n\nfunction renderCategoryList() {\n  getAllCategories().then(resp => {\n    list.insertAdjacentHTML('beforeend', createMarkup(resp));\n  });\n}\n\nfunction createMarkup(list) {\n  return list\n    .map(({ list_name }) => {\n      return `\n    <li class=\"categories__item\">\n         <a href=\"\" class=\"categories__link categories__link-js\"\n        ><span>${list_name}</span></span></spa></a>\n        </li>\n    `;\n    })\n    .join('');\n}\n\nrenderCategoryList();\n\nlist.addEventListener('click', currentCategory);\n\nfunction currentCategory(e) {\n  e.preventDefault();\n  if (e.target.nodeName !== 'SPAN') {\n    return;\n  }\n\n  const removeClass = document.querySelector('.current');\n  removeClass.classList.remove('current');\n\n  const currentEl = e.target;\n  currentEl.classList.add('current');\n\n  if (currentEl.textContent === 'All categories') {\n    renderCategory();\n    // console.log('BestBooks');\n  } else {\n    onClickCategory(e.target.textContent);\n    // console.log('Another category');\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$3d3e7ba3cf1cf643$var$categoriesAll","$3d3e7ba3cf1cf643$var$topBooks","$3d3e7ba3cf1cf643$var$getCategory","$3d3e7ba3cf1cf643$var$_getAllCategories","$parcel$interopDefault","$2TvXO","mark","_callee","$dIxxU","default","get","then","response","data","apply","this","arguments","$3d3e7ba3cf1cf643$export$3a1253a897925caa","$3d3e7ba3cf1cf643$var$_getTopBooks","$3d3e7ba3cf1cf643$export$3284c578b0ee51b1","categoryName","$3d3e7ba3cf1cf643$var$_getByCategory","concat","console","log","$09cbed7c804f604c$var$containerRef","refs","selectedCattegory","$09cbed7c804f604c$export$68a4a2caef8d9054","category","array","title","elements","$09cbed7c804f604c$export$7a7789929b11dbd1","list_name","map","book","_id","book_image","author","join","innerHTML","catch","string","split","quantityWord","length","categoryNameAddSpan","i","$9121ef6a15754c84$var$renderBookCard","book1","books","seeMoreButton","$9121ef6a15754c84$export$e97b6e5d629f1acb","markup","$4Nugj","error","addEventListener","event","target","nodeName","dataset","id","$507db43441842ee9$var$list","categoriesList","resp","insertAdjacentHTML","param","e","preventDefault","document","querySelector","classList","remove","currentEl","add","textContent"],"version":3,"file":"index.3e930464.js.map"}