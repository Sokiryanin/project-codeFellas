{"mappings":"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","sources":["src/js/modal.js","src/js/fetch.js","src/js/selectedCategory.js","src/js/bestBooks.js","src/js/allCategories.js"],"sourcesContent":["import { refs } from './refs';\nimport { getBookById } from './fetch';\n\nconst storageKey = 'shoppingList';\nlet selectedBook = null;\n\n// Функция для отображения модального окна\nexport function showModal() {\n  const elements = document.querySelectorAll(\n    '.category__item, .best-book__item'\n  );\n  elements.forEach(element => {\n    element.addEventListener('click', () => handleElementClick(element));\n  });\n  function handleElementClick(element) {\n    clearModal();\n    const elId = element.dataset.id;\n\n    // Загружаем информацию о книге по её ID\n    getBookById(elId)\n      .then(resp => {\n        console.log(resp);\n        updateModalContent(resp);\n        updateShoppingButton(resp._id); // Используем _id из ответа сервера\n        openModal();\n        document.addEventListener('keydown', onEscape);\n\n        selectedBook = resp;\n      })\n      .catch(error => {\n        console.error('Error fetching book data:', error);\n      });\n  }\n\n  function updateModalContent(bookData) {\n    const { author, title, description, book_image, buy_links, _id } = bookData;\n\n    refs.modalAuthor.textContent = author;\n    refs.modalTitle.textContent = title;\n    refs.modalDescription.textContent = description;\n    refs.modalImage.setAttribute('src', book_image);\n    refs.modalLinkAmazon.setAttribute('href', buy_links[0].url);\n    refs.modalLinkApple.setAttribute('href', buy_links[1].url);\n    refs.modalLinkShop.setAttribute('href', buy_links[4].url);\n  }\n\n  function updateShoppingButton(_id) {\n    const shoppingList = JSON.parse(localStorage.getItem(storageKey)) || [];\n    const bookIndex = shoppingList.findIndex(item => item._id === _id);\n\n    if (bookIndex === -1) {\n      refs.modalButton.textContent = 'Add to shopping list';\n      refs.modalUserInfo.textContent = '';\n    } else {\n      refs.modalButton.textContent = 'Remove from the shopping list';\n      refs.modalUserInfo.textContent =\n        'Congratulations! You have added the book to the shopping list. To delete, press the button \"Remove from the shopping list\".';\n    }\n  }\n\n  function openModal() {\n    refs.modalWindow.classList.remove('visually-hidden');\n    refs.body.classList.add('locked');\n    refs.modalWindow.addEventListener('click', backDropClick);\n  }\n\n  // Обработчик события при клике на кнопку закрытия модального окна\n  refs.modalCloseBtn.addEventListener('click', closeModal);\n\n  function closeModal() {\n    refs.modalWindow.classList.add('visually-hidden');\n    refs.body.classList.remove('locked');\n    refs.modalWindow.removeEventListener('click', backDropClick);\n  }\n\n  function backDropClick(e) {\n    if (e.target === refs.modalWindow) {\n      closeModal();\n    }\n  }\n\n  function onEscape(event) {\n    if (event.code === 'Escape') {\n      closeModal();\n      document.removeEventListener('keydown', onEscape);\n    }\n  }\n}\n\n// Очистка модального окна\nfunction clearModal() {\n  refs.modalAuthor.textContent = '';\n  refs.modalTitle.textContent = '';\n  refs.modalDescription.textContent = '';\n  refs.modalImage.setAttribute('src', '');\n  refs.modalLinkAmazon.setAttribute('href', '');\n  refs.modalLinkApple.setAttribute('href', '');\n  refs.modalLinkShop.setAttribute('href', '');\n}\n\n// Обработчик события при клике на кнопку добавления/удаления из списка покупок\nrefs.modalButton.addEventListener('click', buttonChange);\n\n// Функция для добавления/удаления книги из списка покупок\nfunction buttonChange() {\n  if (!selectedBook) {\n    return; // Если нет выбранной книги, не выполняем ничего\n  }\n\n  const bookData = {\n    author: refs.modalAuthor.textContent,\n    title: refs.modalTitle.textContent,\n    description: refs.modalDescription.textContent,\n    book_image: refs.modalImage.getAttribute('src'),\n    buy_links: [\n      { url: refs.modalLinkAmazon.getAttribute('href') },\n      { url: refs.modalLinkApple.getAttribute('href') },\n      { url: refs.modalLinkShop.getAttribute('href') },\n    ],\n    _id: selectedBook._id,\n  };\n\n  const shoppingList = JSON.parse(localStorage.getItem(storageKey)) || [];\n  const bookIndex = shoppingList.findIndex(item => item._id === bookData._id);\n\n  if (refs.modalButton.textContent === 'Add to shopping list') {\n    shoppingList.push(bookData);\n    localStorage.setItem(storageKey, JSON.stringify(shoppingList));\n    refs.modalButton.textContent = 'Remove from the shopping list';\n    refs.modalUserInfo.textContent =\n      'Congratulations! You have added the book to the shopping list. To delete, press the button \"Remove from the shopping list\".';\n  } else {\n    shoppingList.splice(bookIndex, 1);\n    localStorage.setItem(storageKey, JSON.stringify(shoppingList));\n    refs.modalButton.textContent = 'Add to shopping list';\n    refs.modalUserInfo.textContent = '';\n  }\n}\n\n// ================================================================\n","import axios from 'axios';\n\nconst categoriesAll = 'https://books-backend.p.goit.global/books/category-list';\nconst topBooks = 'https://books-backend.p.goit.global/books/top-books';\nconst getCategory = 'https://books-backend.p.goit.global/books/category';\nconst bookInfo = 'https://books-backend.p.goit.global/books/';\n\n// return all categories\nexport async function getAllCategories() {\n  return axios.get(categoriesAll).then(response => {\n    return response.data;\n  });\n}\n\n// return top books\nexport async function getTopBooks() {\n  return axios.get(topBooks).then(response => {\n    return response.data;\n  });\n}\n\n// return choose category\nexport async function getByCategory(categoryName) {\n  return axios.get(`${getCategory}?category=${categoryName}`).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n}\n\ngetByCategory('Advice How-To and Miscellaneous');\n\n// return bool by id\nexport async function getBookById(id) {\n  return axios.get(`${bookInfo}${id}`).then(response => {\n    return response.data;\n  });\n}\n","import { getByCategory } from './fetch';\nimport { showModal } from './modal';\nimport { refs } from './refs';\n\nconst containerRef = refs.selectedCattegory;\n\nexport function onClickCategory(category) {\n  getByCategory(category)\n    .then(response => {\n      renderCategory(getMarkCategory(response));\n    })\n    .catch(console.log);\n}\n\nfunction renderCategory(mark) {\n  containerRef.innerHTML = mark;\n  showModal();\n}\n\nfunction getMarkCategory(array) {\n  const categoryName = markLastWord(array[0].list_name);\n  const title = `<h2 class=\"category__title\">${categoryName}</h2>`;\n\n  const elements = array\n    .map(book => {\n      return `<li class=\"category__item\" data-id=\"${book._id}\">\n      <div class=\"category__item-wrap\">\n        <div class=\"category__img-container\">\n        <img class=\"category__item-img\" src=\"${book.book_image} \"/>\n        <p class=\"category__pop-up-text\">\n                    quick view \n                  </p>\n        </div>\n        <p class=\"category__item-title\">${book.title}</p>\n        <p class=\"category__item-author\">${book.author}</p>\n        </li>`;\n    })\n    .join('');\n  const result = `<div class=\"select-category-cont\">${title}<ul class=\"category__list\">${elements}</ul></div>`;\n  return result;\n}\n\nexport function markLastWord(string) {\n  const categoryName = string.split(' ');\n  const quantityWord = categoryName.length;\n  let categoryNameAddSpan = '';\n  if (quantityWord > 1) {\n    for (let i = 0; i <= quantityWord - 2; i += 1) {\n      categoryNameAddSpan += ' ' + categoryName[i];\n    }\n    categoryNameAddSpan +=\n      ' ' +\n      `<span class=title__last-word>${categoryName[quantityWord - 1]}<span>`;\n  } else {\n    categoryNameAddSpan = `<span class=title__last-word>${categoryName[0]}<span>`;\n  }\n  return categoryNameAddSpan;\n}\n","import { getTopBooks } from './fetch';\nimport { showModal } from './modal';\nimport { refs } from './refs';\nimport { markLastWord, onClickCategory } from './selectedCategory';\n\nfunction renderBooks(mark) {\n  refs.selectedCattegory.innerHTML = mark;\n  showModal();\n}\n\nfunction renderBookCard(book) {\n  const { list_name, books } = book;\n\n  const title = `<h3 class=\"best-category__item-title\">${list_name}</h3>`;\n  const elements = books\n    .map(book => {\n      return ` <li class=\"best-book__item\" data-id=\"${book._id}\">\n      <div class=\"best-book__wrap\">\n    <div class=\"best-book__img-container\">\n      <img class=\"best-book__img\" src=\"${book.book_image}\" alt=\"${book.title}\"/>\n      <p class=\"book__pop-up-text\">\n                quick view \n              </p>\n              </div>\n      <h3 class=\"best-book__title\">${book.title}</h3>\n      <p class=\"best-book__author\">${book.author}</p>\n      </div>\n    </li>\n    `;\n    })\n    .join('');\n\n  const seeMoreButton = `<button class=\"seemore__btn\" type=\"button\" data-id=\"${list_name}\">See more</button>`;\n  const result = `<li class=\"best-category__item\">${title}<ul class=\"best-book__list\">${elements}</ul>${seeMoreButton}</li>`;\n  return result;\n}\nrenderCategory();\n\nexport function renderCategory() {\n  getTopBooks()\n    .then(response => {\n      const markup = `<div class=\" best-category__container\"><h2 class=\"best-category__title title-category__list\">\n        ${markLastWord(\n          'Best Sellers Books'\n        )}</h2><ul class=\"best-category__list\">${response\n        .map(renderBookCard)\n        .join('')}</ul></div>`;\n      renderBooks(markup);\n    })\n    .catch(error => {\n      console.log('Помилка при отриманні даних з сервера:', error);\n    });\n}\n\nrefs.selectedCattegory.addEventListener('click', event => {\n  if (event.target.nodeName === 'BUTTON') {\n    onClickCategory(event.target.dataset.id);\n  }\n});\n","import { renderCategory } from './bestBooks';\nimport { getAllCategories } from './fetch';\nimport { refs } from './refs';\nimport { onClickCategory } from './selectedCategory';\n\nconst list = refs.categoriesList;\n\nfunction renderCategoryList() {\n  getAllCategories().then(resp => {\n    list.insertAdjacentHTML('beforeend', createMarkup(resp));\n  });\n}\n\nfunction createMarkup(list) {\n  return list\n    .map(({ list_name }) => {\n      return `\n    <li class=\"categories__item\">\n         <a href=\"\" class=\"categories__link categories__link-js\"\n        ><span>${list_name}</span></span></spa></a>\n        </li>\n    `;\n    })\n    .join('');\n}\n\nrenderCategoryList();\n\nlist.addEventListener('click', currentCategory);\n\nfunction currentCategory(e) {\n  e.preventDefault();\n  if (e.target.nodeName !== 'SPAN') {\n    return;\n  }\n\n  const removeClass = document.querySelector('.current');\n  removeClass.classList.remove('current');\n\n  const currentEl = e.target;\n  currentEl.classList.add('current');\n\n  if (currentEl.textContent === 'All categories') {\n    renderCategory();\n    // console.log('BestBooks');\n  } else {\n    onClickCategory(e.target.textContent);\n    // console.log('Another category');\n  }\n}\n"],"names":["$krGWQ","parcelRequire","$2shzp","async","$924b66e829bc1184$export$3a1253a897925caa","default","get","then","response","data","$924b66e829bc1184$export$3284c578b0ee51b1","categoryName","console","log","$924b66e829bc1184$export$7f429e0f3975c907","id","$8a7e756c566dd1ea$var$selectedBook","$8a7e756c566dd1ea$export$d7e8d4d4450c819c","closeModal","refs","modalWindow","classList","add","body","remove","removeEventListener","backDropClick","e","target","onEscape","event","code","document","querySelectorAll","forEach","element","addEventListener","modalAuthor","textContent","modalTitle","modalDescription","modalImage","setAttribute","modalLinkAmazon","modalLinkApple","modalLinkShop","dataset","resp","bookData","author","title","description","book_image","buy_links","_id","url","updateModalContent","shoppingList","JSON","parse","localStorage","getItem","findIndex","item","modalButton","modalUserInfo","updateShoppingButton","catch","error","handleElementClick","modalCloseBtn","getAttribute","bookIndex","push","setItem","stringify","splice","$17abf32bdfed18e1$var$containerRef","selectedCattegory","$17abf32bdfed18e1$export$68a4a2caef8d9054","category","mark","array","$17abf32bdfed18e1$export$7a7789929b11dbd1","list_name","elements","map","book","join","$17abf32bdfed18e1$var$getMarkCategory","innerHTML","string","split","quantityWord","length","categoryNameAddSpan","i","$34993c7160fee615$var$renderBookCard","book1","books","$34993c7160fee615$export$e97b6e5d629f1acb","markup","nodeName","$b82465fdd637a2b4$var$list","categoriesList","insertAdjacentHTML","preventDefault","querySelector","currentEl"],"version":3,"file":"index.72b6f0d8.js.map"}