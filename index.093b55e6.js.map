{"mappings":"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","sources":["src/js/modal.js","src/js/fetch.js","src/js/selectedCategory.js","src/js/bestBooks.js","src/js/allCategories.js"],"sourcesContent":["import { refs } from './refs';\nimport { getBookById } from './fetch';\n\nconst storageKey = 'shoppingList';\n\n// Функция для отображения модального окна\nexport function showModal() {\n  const elements = document.querySelectorAll(\n    '.category__item, .best-book__item'\n  );\n  elements.forEach(element => {\n    element.addEventListener('click', () => handleElementClick(element));\n  });\n\n  function handleElementClick(element) {\n    clearModal();\n    const elId = element.dataset.id;\n\n    // Загружаем информацию о книге по её ID\n    getBookById(elId)\n      .then(resp => {\n        updateModalContent(resp);\n        updateShoppingButton(resp.title);\n        openModal();\n        document.addEventListener('keydown', onEscape);\n      })\n      .catch(error => {\n        console.error('Error fetching book data:', error);\n      });\n  }\n\n  function updateModalContent(bookData) {\n    const { author, title, description, book_image, buy_links } = bookData;\n\n    refs.modalAuthor.textContent = author;\n    refs.modalTitle.textContent = title;\n    refs.modalDescription.textContent = description;\n    refs.modalImage.setAttribute('src', book_image);\n    refs.modalLinkAmazon.setAttribute('href', buy_links[0].url);\n    refs.modalLinkApple.setAttribute('href', buy_links[1].url);\n    refs.modalLinkShop.setAttribute('href', buy_links[4].url);\n  }\n\n  function updateShoppingButton(title) {\n    const shoppingList = JSON.parse(localStorage.getItem(storageKey)) || [];\n    const bookIndex = shoppingList.findIndex(item => item.title === title);\n\n    if (bookIndex === -1) {\n      refs.modalButton.textContent = 'Add to shopping list';\n      refs.modalUserInfo.textContent = '';\n    } else {\n      refs.modalButton.textContent = 'Remove from the shopping list';\n      refs.modalUserInfo.textContent =\n        'Congratulations! You have added the book to the shopping list. To delete, press the button \"Remove from the shopping list\".';\n    }\n  }\n\n  function openModal() {\n    refs.modalWindow.classList.remove('visually-hidden');\n    refs.body.classList.add('locked');\n    refs.modalWindow.addEventListener('click', backDropClick);\n  }\n\n  // Обработчик события при клике на кнопку закрытия модального окна\n  refs.modalCloseBtn.addEventListener('click', closeModal);\n\n  function closeModal() {\n    refs.modalWindow.classList.add('visually-hidden');\n    refs.body.classList.remove('locked');\n    refs.modalWindow.removeEventListener('click', backDropClick);\n  }\n\n  function backDropClick(e) {\n    if (e.target === refs.modalWindow) {\n      closeModal();\n    }\n  }\n\n  function onEscape(event) {\n    if (event.code === 'Escape') {\n      closeModal();\n      document.removeEventListener('keydown', onEscape);\n    }\n  }\n}\n\n// Очистка модального окна\nfunction clearModal() {\n  refs.modalAuthor.textContent = '';\n  refs.modalTitle.textContent = '';\n  refs.modalDescription.textContent = '';\n  refs.modalImage.setAttribute('src', '');\n  refs.modalLinkAmazon.setAttribute('href', '');\n  refs.modalLinkApple.setAttribute('href', '');\n  refs.modalLinkShop.setAttribute('href', '');\n}\n\n// Обработчик события при клике на кнопку добавления/удаления из списка покупок\nrefs.modalButton.addEventListener('click', buttonChange);\n\n// Функция для добавления/удаления книги из списка покупок\nfunction buttonChange() {\n  const bookData = {\n    author: refs.modalAuthor.textContent,\n    title: refs.modalTitle.textContent,\n    description: refs.modalDescription.textContent,\n    book_image: refs.modalImage.getAttribute('src'),\n    buy_links: [\n      { url: refs.modalLinkAmazon.getAttribute('href') },\n      { url: refs.modalLinkApple.getAttribute('href') },\n      { url: refs.modalLinkShop.getAttribute('href') },\n    ],\n  };\n\n  const shoppingList = JSON.parse(localStorage.getItem(storageKey)) || [];\n  const bookIndex = shoppingList.findIndex(\n    item => item.title === bookData.title\n  );\n\n  if (bookIndex === -1) {\n    shoppingList.push(bookData);\n    localStorage.setItem(storageKey, JSON.stringify(shoppingList));\n    refs.modalButton.textContent = 'Remove from the shopping list';\n    refs.modalUserInfo.textContent =\n      'Congratulations! You have added the book to the shopping list. To delete, press the button \"Remove from the shopping list\".';\n  } else {\n    shoppingList.splice(bookIndex, 1);\n    localStorage.setItem(storageKey, JSON.stringify(shoppingList));\n    refs.modalButton.textContent = 'Add to shopping list';\n    refs.modalUserInfo.textContent = '';\n  }\n}\n","import axios from 'axios';\n\nconst categoriesAll = 'https://books-backend.p.goit.global/books/category-list';\nconst topBooks = 'https://books-backend.p.goit.global/books/top-books';\nconst getCategory = 'https://books-backend.p.goit.global/books/category';\nconst bookInfo = 'https://books-backend.p.goit.global/books/';\n\n// return all categories\nexport async function getAllCategories() {\n  return axios.get(categoriesAll).then(response => {\n    return response.data;\n  });\n}\n\n// return top books\nexport async function getTopBooks() {\n  return axios.get(topBooks).then(response => {\n    return response.data;\n  });\n}\n\n// return choose category\nexport async function getByCategory(categoryName) {\n  return axios.get(`${getCategory}?category=${categoryName}`).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n}\n\ngetByCategory('Advice How-To and Miscellaneous');\n\n// return bool by id\nexport async function getBookById(id) {\n  return axios.get(`${bookInfo}${id}`).then(response => {\n    return response.data;\n  });\n}\n","import { getByCategory } from './fetch';\nimport { showModal } from './modal';\nimport { refs } from './refs';\n\nconst containerRef = refs.selectedCattegory;\n\nexport function onClickCategory(category) {\n  getByCategory(category)\n    .then(response => {\n      renderCategory(getMarkCategory(response));\n    })\n    .catch(console.log);\n}\n\nfunction renderCategory(mark) {\n  containerRef.innerHTML = mark;\n  showModal();\n}\n\nfunction getMarkCategory(array) {\n  const categoryName = markLastWord(array[0].list_name);\n  const title = `<h2 class=\"category__title\">${categoryName}</h2>`;\n\n  const elements = array\n    .map(book => {\n      return `<li class=\"category__item\" data-id=\"${book._id}\">\n      <div class=\"category__item-wrap\">\n        <div class=\"category__img-container\">\n        <img class=\"category__item-img\" src=\"${book.book_image} \"/>\n        <p class=\"category__pop-up-text\">\n                    quick view \n                  </p>\n        </div>\n        <p class=\"category__item-title\">${book.title}</p>\n        <p class=\"category__item-author\">${book.author}</p>\n        </li>`;\n    })\n    .join('');\n  const result = `<div class=\"select-category-cont\">${title}<ul class=\"category__list\">${elements}</ul></div>`;\n  return result;\n}\n\nexport function markLastWord(string) {\n  const categoryName = string.split(' ');\n  const quantityWord = categoryName.length;\n  let categoryNameAddSpan = '';\n  if (quantityWord > 1) {\n    for (let i = 0; i <= quantityWord - 2; i += 1) {\n      categoryNameAddSpan += ' ' + categoryName[i];\n    }\n    categoryNameAddSpan +=\n      ' ' +\n      `<span class=title__last-word>${categoryName[quantityWord - 1]}<span>`;\n  } else {\n    categoryNameAddSpan = `<span class=title__last-word>${categoryName[0]}<span>`;\n  }\n  return categoryNameAddSpan;\n}\n","import { getTopBooks } from './fetch';\nimport { showModal } from './modal';\nimport { refs } from './refs';\nimport { markLastWord, onClickCategory } from './selectedCategory';\n\nfunction renderBooks(mark) {\n  refs.selectedCattegory.innerHTML = mark;\n  showModal();\n}\n\nfunction renderBookCard(book) {\n  const { list_name, books } = book;\n\n  const title = `<h3 class=\"best-category__item-title\">${list_name}</h3>`;\n  const elements = books\n    .map(book => {\n      return ` <li class=\"best-book__item\" data-id=\"${book._id}\">\n      <div class=\"best-book__wrap\">\n    <div class=\"best-book__img-container\">\n      <img class=\"best-book__img\" src=\"${book.book_image}\" alt=\"${book.title}\"/>\n      <p class=\"book__pop-up-text\">\n                quick view \n              </p>\n              </div>\n      <h3 class=\"best-book__title\">${book.title}</h3>\n      <p class=\"best-book__author\">${book.author}</p>\n      </div>\n    </li>\n    `;\n    })\n    .join('');\n\n  const seeMoreButton = `<button class=\"seemore__btn\" type=\"button\" data-id=\"${list_name}\">See more</button>`;\n  const result = `<li class=\"best-category__item\">${title}<ul class=\"best-book__list\">${elements}</ul>${seeMoreButton}</li>`;\n  return result;\n}\nrenderCategory();\n\nexport function renderCategory() {\n  getTopBooks()\n    .then(response => {\n      const markup = `<div class=\" best-category__container\"><h2 class=\"best-category__title title-category__list\">\n        ${markLastWord(\n          'Best Sellers Books'\n        )}</h2><ul class=\"best-category__list\">${response\n        .map(renderBookCard)\n        .join('')}</ul></div>`;\n      renderBooks(markup);\n    })\n    .catch(error => {\n      console.log('Помилка при отриманні даних з сервера:', error);\n    });\n}\n\nrefs.selectedCattegory.addEventListener('click', event => {\n  if (event.target.nodeName === 'BUTTON') {\n    onClickCategory(event.target.dataset.id);\n  }\n});\n","import { renderCategory } from './bestBooks';\nimport { getAllCategories } from './fetch';\nimport { refs } from './refs';\nimport { onClickCategory } from './selectedCategory';\n\nconst list = refs.categoriesList;\n\nfunction renderCategoryList() {\n  getAllCategories().then(resp => {\n    list.insertAdjacentHTML('beforeend', createMarkup(resp));\n  });\n}\n\nfunction createMarkup(list) {\n  return list\n    .map(({ list_name }) => {\n      return `\n    <li class=\"categories__item\">\n         <a href=\"\" class=\"categories__link categories__link-js\"\n        ><span>${list_name}</span></span></spa></a>\n        </li>\n    `;\n    })\n    .join('');\n}\n\nrenderCategoryList();\n\nlist.addEventListener('click', currentCategory);\n\nfunction currentCategory(e) {\n  e.preventDefault();\n  if (e.target.nodeName !== 'SPAN') {\n    return;\n  }\n\n  const removeClass = document.querySelector('.current');\n  removeClass.classList.remove('current');\n\n  const currentEl = e.target;\n  currentEl.classList.add('current');\n\n  if (currentEl.textContent === 'All categories') {\n    renderCategory();\n    // console.log('BestBooks');\n  } else {\n    onClickCategory(e.target.textContent);\n    // console.log('Another category');\n  }\n}\n"],"names":["$4Nugj","parcelRequire","$bpxeT","$3d3e7ba3cf1cf643$var$categoriesAll","$3d3e7ba3cf1cf643$var$topBooks","$3d3e7ba3cf1cf643$var$getCategory","$3d3e7ba3cf1cf643$var$bookInfo","$3d3e7ba3cf1cf643$var$_getAllCategories","$parcel$interopDefault","$2TvXO","mark","_callee","$dIxxU","default","get","then","response","data","apply","this","arguments","$3d3e7ba3cf1cf643$export$3a1253a897925caa","$3d3e7ba3cf1cf643$var$_getTopBooks","$3d3e7ba3cf1cf643$export$3284c578b0ee51b1","categoryName","$3d3e7ba3cf1cf643$var$_getByCategory","concat","console","log","$3d3e7ba3cf1cf643$export$7f429e0f3975c907","id","$3d3e7ba3cf1cf643$var$_getBookById","$40873ecf3c18e122$var$storageKey","$40873ecf3c18e122$export$d7e8d4d4450c819c","closeModal","refs","modalWindow","classList","add","body","remove","removeEventListener","backDropClick","e","target","onEscape","event","code","document","querySelectorAll","forEach","element","addEventListener","modalAuthor","textContent","modalTitle","modalDescription","modalImage","setAttribute","modalLinkAmazon","modalLinkApple","modalLinkShop","dataset","resp","bookData","author","title","description","book_image","buy_links","url","JSON","parse","localStorage","getItem","findIndex","item","modalButton","modalUserInfo","updateShoppingButton","catch","error","handleElementClick","modalCloseBtn","getAttribute","shoppingList","bookIndex","push","setItem","stringify","splice","$09cbed7c804f604c$var$containerRef","selectedCattegory","$09cbed7c804f604c$export$68a4a2caef8d9054","category","array","elements","$09cbed7c804f604c$export$7a7789929b11dbd1","list_name","map","book","_id","join","innerHTML","string","split","quantityWord","length","categoryNameAddSpan","i","$9121ef6a15754c84$var$renderBookCard","book1","books","seeMoreButton","$9121ef6a15754c84$export$e97b6e5d629f1acb","markup","nodeName","$507db43441842ee9$var$list","categoriesList","insertAdjacentHTML","param","preventDefault","querySelector","currentEl"],"version":3,"file":"index.093b55e6.js.map"}